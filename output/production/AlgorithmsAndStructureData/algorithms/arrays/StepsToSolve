Algorithms:

I.Smallest and largest Value Array:

Content of task: "Find Smallest and Largest Element in an Array"

steps:
1. Initialise two variable and name as largest and smallest with array first position arr[0]
2. Iterate over array
3.
    a)If current element is greater than largest then assign current element to largest.
    b)If current element is smaller than smallest then assign current element to smallest.
4.Output smallest and largest number in table first and second position.


II. Missing number in array

Content of task: "find missing number in an Array"

steps:
1. Find the sum of n number using formula "n=n*(n+1)/2"
2. Find the sum of elements present in given array
3. Substract(sum of n numbers - sum of elements present in the array)


III. Element in a sorted and rotated array

Content of task: "Search an element in a sorted and rotated array"

steps:
1. Compute mid from formula mid = (low+high)/2
2. Check if [mid...high] is sorted
3.
    a) If number lies between the range, low = mid++
    b) If number does not lie in the range, high = mid--
4. Check if [low...mid] is sorted
5.
    a) If number lies between the range, high = mid--
    b) If number does not lie in the range, low = mid++


IV. Search Minimum and Maximum Elements in sorted and rotated Array

Content of task: "find minimum and maximum elements in a sorted and rotated array"

steps:
1. Sort array by sort() method
2. Minimum element is in first cell, Maximum element is in last cell


V. Odd Times Numbers In Array

Content of Task: "Find the number occurring odd number of times in an array"

O(n)

steps:
1. get elements by for each loop and put into HashMap (key => number , value => occuring times)
2. create empty list of Odd Times Elements
3. Iterate through HashMap elements
4. If getValue % 2 == 1 then add number to list of Odd Times Elements
5. If list of Odd Times Elements is empty then throw ArithmeticException ("Array dont have odd times numbers")
6. return list